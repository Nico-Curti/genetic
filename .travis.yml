language: cpp

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.9.0

matrix:
  fast_finish: true
  include:
# linux + gcc
    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@5.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=g++-5 && CXX=g++-5"
        - COMPILER_ID="gcc"

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@6.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=g++-6 && CXX=g++-6"
        - COMPILER_ID="gcc"

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@7.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=g++-7 && CXX=g++-7"
        - COMPILER_ID="gcc"

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@8.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - COMPILER_ID="gcc"

# linux + clang

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.6
      dist: trusty
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.8
          packages:
            - g++-7
            - clang-3.6
            - libstdc++-4.8-dev
            - libclang-3.6-dev
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=3.9.0
        - LINKER_FLAGS="-stdlib=libstdc++ -lc++abi"

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.8
      dist: trusty
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.8
            - g++-4.8-aarch64-linux-gnu
            - gcc-4.8-aarch64-linux-gnu
            - g++-4.8-multilib
            - gcc-4.8-multilib
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=3.9.0
        - LINKER_FLAGS="-stdlib=libstdc++ -lc++abi"

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.9
      dist: trusty
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.9
            - g++-4.8-aarch64-linux-gnu
            - gcc-4.8-aarch64-linux-gnu
            - g++-4.8-multilib
            - gcc-4.8-multilib
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=3.9.0
        - LINKER_FLAGS="-stdlib=libstdc++ -lc++abi"

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@4.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - libstdc++-4.8-dev
            - llvm-4.0-dev
            - libclang-4.0-dev
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=4.0.0

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@5.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libstdc++-4.8-dev
            - llvm-5.0-dev
            - libclang-5.0-dev
            - libc++-dev
            - libc++abi-dev

      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=5.0.0

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@6.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-6.0
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - clang-6.0
            - libstdc++6-4.4-dev
            - llvm-6.0
            - libclang-6.0-dev
            - libc++-dev
            - libc++abi-dev

      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=6.0.0

# osx + clang
    - os: osx
      compiler: clang
      name: macOS - clang@7.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7.0
            - libstdc++6-4.6-dev
            - llvm-7-dev
            - libclang-7-dev
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0"
        - LINKER_FLAGS="-stdlib=libc++ -lc++abi"
        - CXXFLAGS="-stdlib=libc++"
        - COMPILER_ID="clang"

    - os: osx
      osx_image: xcode10.1
      compiler: clang
      name: macOS - native clang (llvm backend)
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-7
          packages:
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL=""
        - COMPILER_ID="clang"

  allow_failures:
    - name: ubuntu 14.04 - clang@3.6
    - name: ubuntu 14.04 - clang@3.8
    - name: ubuntu 14.04 - clang@3.9
    - name: macOS - clang@7.0
    - name: macOS - native clang (llvm backend)

before_install:
  - travis_retry eval "${MATRIX_EVAL}"

install:
  # Install OpenMPI
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libboost-all-dev libopenmpi-dev                                          ;fi
  ###############################################################################################################################################
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then brew install openmpi                                                                          ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then brew install boost-mpi                                                                        ;fi

  # Install new Cmake
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Darwin-x86_64.tar.gz   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then tar -xzf cmake-3.13.1-Darwin-x86_64.tar.gz                                                    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then export PATH=$PWD/cmake-3.13.1-Darwin-x86_64/CMake.app/Contents/bin:$PATH                      ;fi
  ###############################################################################################################################################
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Linux-x86_64.tar.gz    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar -xzf cmake-3.13.1-Linux-x86_64.tar.gz                                                     ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=$PWD/cmake-3.13.1-Linux-x86_64/bin:$PATH                                          ;fi

  # Prepare build
  - mkdir build && cd build
  - if [[ "$COMPILER_ID" == "gcc"   ]]; then cmake .. "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=ON"  "-DMPI=ON"                                       ;fi
  - if [[ "$COMPILER_ID" == "clang" ]]; then cmake .. "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=OFF" "-DMPI=ON"                                       ;fi
  - cd ..

script:
  - cd build && cmake --build . --target install -- -j8 && cd ..
