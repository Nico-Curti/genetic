language: cpp


matrix:
  fast_finish: true
  include:
# linux + gcc
    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@5.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=g++-5 && CXX=g++-5"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@6.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=g++-6 && CXX=g++-6"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@7.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=g++-7 && CXX=g++-7"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@8.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

# osx + clang
    - os: osx
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7.0
      env:
        - MATRIX_EVAL="CXX=clang++-7"
        - LINKER_FLAGS="-stdlib=libc++ -lc++abi"
        - CXXFLAGS="-stdlib=libc++"
        - BUILD=osx-clang

    - os: osx
      compiler: clang
      osx_image: xcode10.1
      name: macOS - native clang (llvm backend)
      env:
        - MATRIX_EVAL=""
        - LINKER_FLAGS="-stdlib=libc++ -lc++abi"
        - CXXFLAGS="-stdlib=libc++"
        - BUILD=osx-clang

before_install:
  - pip install --user codecov
  - if [[ "$BUILD" == "linux-gcc" ]]; then sudo apt-get install libboost-all-dev libopenmpi-dev                                          ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Darwin-x86_64.tar.gz   ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then tar -xzf cmake-3.13.1-Darwin-x86_64.tar.gz                                                    ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then export PATH=$PWD/cmake-3.13.1-Darwin-x86_64/CMake.app/Contents/bin:$PATH                      ;fi

  ###############################################################################################################################################

  - if [[ "$BUILD" == "linux-gcc" ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Linux-x86_64.tar.gz    ;fi
  - if [[ "$BUILD" == "linux-gcc" ]]; then tar -xzf cmake-3.13.1-Linux-x86_64.tar.gz                                                     ;fi
  - if [[ "$BUILD" == "linux-gcc" ]]; then export PATH=$PWD/cmake-3.13.1-Linux-x86_64/bin:$PATH                                          ;fi

install:
  - if [[ "$BUILD" == "osx-clang" ]]; then brew update                                                                                   ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then brew install llvm                                                                             ;fi
  - export CMAKE_C_COMPILER=${CC}                                                                                                        ;fi
  - export CMAKE_CXX_COMPILER=${CXX}                                                                                                     ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then export CMAKE_LINKER=clang++-7                                                                 ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then ${CXX} --version                                                                              ;fi

  - if [[ "$BUILD" == "osx-clang" ]]; then brew install openmpi                                                                          ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then brew install boost-mpi                                                                        ;fi
  ###############################################################################################################################################
before_script:
  - mkdir build
  - cd build
  - if [[ "$BUILD" == "linux-gcc" ]]; then cmake "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=ON" "-DMPI=ON" ..                                     ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then cmake "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=OFF" "-DMPI=ON" ..                                    ;fi

script:
  - cmake --build .

after_success:
  - codecov --file coverage/lcov.info --disable search
