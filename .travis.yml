language: cpp


matrix:
  fast_finish: true
  include:
# linux + gcc
    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@5.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=g++-5 && CXX=g++-5"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@6.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=g++-6 && CXX=g++-6"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@7.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=g++-7 && CXX=g++-7"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@8.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - COMPILER_ID="gcc"
        - BUILD=linux-gcc

# linux + clang

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.6
      addons:
        apt:
          update: true
          packages:
            - clang-3.6
            - libstdc++-4.8-dev
            - llvm-3.9-dev
            - libclang-3.9-dev
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=3.9.0
        - LINKER_FLAGS="-stdlib=libstdc++ -lc++abi"
        - BUILD=linux-gcc

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.8
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
            - libstdc++-4.8-dev
            - llvm-3.9-dev
            - libclang-3.9-dev
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=3.9.0
        - LINKER_FLAGS="-stdlib=libstdc++ -lc++abi"
        - BUILD=linux-gcc

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.9
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - libstdc++-4.8-dev
            - llvm-3.9-dev
            - libclang-3.9-dev
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=3.9.0
        - LINKER_FLAGS="-stdlib=libstdc++ -lc++abi"
        - BUILD=linux-gcc

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@4.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - libstdc++-4.8-dev
            - llvm-4.0-dev
            - libclang-4.0-dev
            - libc++-dev
            - libc++abi-dev
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=4.0.0
        - BUILD=linux-gcc

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@5.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libstdc++-4.8-dev
            - llvm-5.0-dev
            - libclang-5.0-dev
            - libc++-dev
            - libc++abi-dev

      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=5.0.0
        - BUILD=linux-gcc

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@6.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-6.0
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - clang-6.0
            - libstdc++6-4.4-dev
            - llvm-6.0
            - libclang-6.0-dev
            - libc++-dev
            - libc++abi-dev

      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - CMAKE_C_COMPILER=${CC}
        - CMAKE_CXX_COMPILER=${CXX}
        - CMAKE_LINKER=${CXX}
        - COMPILER_ID="clang"
        - LLVM_VERSION=6.0.0
        - BUILD=linux-gcc

# osx + clang
    - os: osx
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7.0
      env:
        - MATRIX_EVAL="CXX=clang++-7"
        - LINKER_FLAGS="-stdlib=libc++ -lc++abi"
        - CXXFLAGS="-stdlib=libc++"
        - BUILD=osx-clang

    - os: osx
      compiler: clang
      osx_image: xcode10.1
      name: macOS - native clang (llvm backend)
      env:
        - MATRIX_EVAL=""
        - LINKER_FLAGS="-stdlib=libc++ -lc++abi"
        - CXXFLAGS="-stdlib=libc++"
        - BUILD=osx-clang

before_install:
  - travis_retry eval "${MATRIX_EVAL}"
  - pip install --user codecov
  - if [[ "$BUILD" == "linux-gcc" ]]; then sudo apt-get install libboost-all-dev libopenmpi-dev                                          ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Darwin-x86_64.tar.gz   ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then tar -xzf cmake-3.13.1-Darwin-x86_64.tar.gz                                                    ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then export PATH=$PWD/cmake-3.13.1-Darwin-x86_64/CMake.app/Contents/bin:$PATH                      ;fi

  ###############################################################################################################################################

  - if [[ "$BUILD" == "linux-gcc" ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Linux-x86_64.tar.gz    ;fi
  - if [[ "$BUILD" == "linux-gcc" ]]; then tar -xzf cmake-3.13.1-Linux-x86_64.tar.gz                                                     ;fi
  - if [[ "$BUILD" == "linux-gcc" ]]; then export PATH=$PWD/cmake-3.13.1-Linux-x86_64/bin:$PATH                                          ;fi

install:
  - if [[ "$BUILD" == "osx-clang" ]]; then brew update                                                                                   ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then brew install llvm                                                                             ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then export CMAKE_LINKER=clang++-7                                                                 ;fi

  - if [[ "$BUILD" == "osx-clang" ]]; then brew install openmpi                                                                          ;fi
  - if [[ "$BUILD" == "osx-clang" ]]; then brew install boost-mpi                                                                        ;fi
  ###############################################################################################################################################
before_script:
  - mkdir build
  - cd build
  - if [[ "$COMPILER_ID" == "gcc"   ]]; then cmake .. "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=ON"  "-DMPI=ON"                                  ;fi
  - if [[ "$COMPILER_ID" == "clang" ]]; then cmake .. "-DCMAKE_BUILD_TYPE=Debug" "-DOMP=OFF" "-DMPI=ON"                                  ;fi

script:
  - cmake --build .

